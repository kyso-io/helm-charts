stages:
  - info
  - test
  - release
  - publish

# Variables
variables:
  # Images
  SEMANTIC_RELEASE_IMAGE: registry.kyso.io/docker/semantic-release/main:latest
  HELMFILE_IMAGE: registry.kyso.io/docker/helmfile:v0.155.0
  # Directories
  GITLAB_CI_DIR: "$CI_PROJECT_DIR/.gitlab-ci"
  # Files
  CHART_PATHS_YAML: "$GITLAB_CI_DIR/chart_paths.yaml"
  CHARTS_TO_REVIEW: "$GITLAB_CI_DIR/charts_list.txt"
  PACKAGE_JSON: "${CI_PROJECT_DIR}/package.json"
  # Change gitlab's git strategy to do full clones
  GIT_STRATEGY: clone
  GIT_DEPTH: 0

# Rule templates
.rules_push_to_main:
  rules:
    # ignore ci(release) commits
    - if: |
        $CI_COMMIT_MESSAGE =~ '/^ci\(release\): [0-9a-zA-Z_.-]+@\d+\.\d+\.\d+/'
      when: never
    # use multi-semantic-release on the main branch only
    - if: $CI_COMMIT_BRANCH == 'main'

.rules_release_tag:
  rules:
    - if: $CI_COMMIT_TAG =~ '/^[0-9a-zA-Z_.-]+@\d+.\d+.\d+$/'

# Job templates
.job_msr:
  image: $SEMANTIC_RELEASE_IMAGE
  before_script:
    - . "$GITLAB_CI_DIR/functions.sh"

.job_helm:
  image: $HELMFILE_IMAGE
  before_script:
    - . "$GITLAB_CI_DIR/functions.sh"

# JOBS
update_info:
  extends:
    - .job_msr
    - .rules_push_to_main
  stage: info
  script:
    - gen_package_json_files
    - gen_updated_charts_list
  artifacts:
    paths:
      - $CHARTS_TO_REVIEW

lint_charts:
  extends:
    - .job_helm
    - .rules_push_to_main
  stage: test
  script:
    - lint_charts_from_updated_charts_list
  needs:
    - update_info

release_charts:
  extends:
    - .job_msr
    - .rules_push_to_main
  stage: release
  script:
    - gen_package_json_files
    - git_push_setup
    - multi-semantic-release
  needs:
    - lint_charts

publish_chart_from_release_tag:
  extends:
    - .job_helm
    - .rules_release_tag
  stage: publish
  script:
    - publish_chart_from_release_tag
